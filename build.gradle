buildscript {
    ext.kotlin_version = '1.2.41'
    ext.spring_boot_version = '2.0.1.RELEASE'
    ext.jackson_version = '2.9.4'
    ext.guava_version = '25.0-jre'
    ext.dokka_version = '0.9.16'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.8'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }


}



group = 'ch.fever.lurch'
version = '0.1.0-SNAPSHOT'

apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply plugin: 'kotlin'

apply plugin: 'org.jetbrains.dokka'


repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.assertj:assertj-core:3.9.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}



kotlin {
    experimental {
        coroutines 'enable'
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}